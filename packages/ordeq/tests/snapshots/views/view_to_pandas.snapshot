Output:
NodeGraph:
  Edges:
     view_to_pandas:aggregate -> []
     view_to_pandas:csv_as_df -> [view_to_pandas:aggregate]
  Nodes:
     View(name=view_to_pandas:aggregate, inputs=(View(name=view_to_pandas:csv_as_df, inputs=(Literal(<view_to_pandas.MockDuckDbValues object at HASH1>),)),))
     View(name=view_to_pandas:csv_as_df, inputs=(Literal(<view_to_pandas.MockDuckDbValues object at HASH1>),))
{View(name=view_to_pandas:csv_as_df, inputs=(Literal(<view_to_pandas.MockDuckDbValues object at HASH1>),)):    value
0      1
1      2
2      3, View(name=view_to_pandas:aggregate, inputs=(View(name=view_to_pandas:csv_as_df, inputs=(Literal(<view_to_pandas.MockDuckDbValues object at HASH1>),)),)): None}

Logging:
INFO	ordeq.io	Loading Literal(<view_to_pandas.MockDuckDbValues object at HASH1>)
INFO	ordeq.runner	Running node View(name=view_to_pandas:csv_as_df, inputs=(Literal(<view_to_pandas.MockDuckDbValues object at HASH1>),))
INFO	ordeq.runner	Running node View(name=view_to_pandas:aggregate, inputs=(IO(idx=ID1),))