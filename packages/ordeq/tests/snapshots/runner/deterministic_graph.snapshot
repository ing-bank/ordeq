Output:
NodeGraph:
  Edges:
     deterministic_graph:a -> []
     deterministic_graph:f1 -> [deterministic_graph:a, deterministic_graph:z]
     deterministic_graph:f2 -> [deterministic_graph:a, deterministic_graph:z]
     deterministic_graph:f3 -> [deterministic_graph:a, deterministic_graph:z]
     deterministic_graph:f4 -> [deterministic_graph:a, deterministic_graph:z]
     deterministic_graph:z -> []
  Nodes:
     View(name=deterministic_graph:a, inputs=[IO(idx=ID1), IO(idx=ID2), IO(idx=ID3), IO(idx=ID4)])
     Node(name=deterministic_graph:f1, outputs=[IO(idx=ID1)])
     Node(name=deterministic_graph:f2, outputs=[IO(idx=ID2)])
     Node(name=deterministic_graph:f3, outputs=[IO(idx=ID3)])
     Node(name=deterministic_graph:f4, outputs=[IO(idx=ID4)])
     View(name=deterministic_graph:z, inputs=[IO(idx=ID1), IO(idx=ID2), IO(idx=ID3), IO(idx=ID4)])

Logging:
INFO	ordeq.runner	Running node Node(name=deterministic_graph:f4, outputs=[IO(idx=ID4)])
INFO	ordeq.runner	Running node Node(name=deterministic_graph:f3, outputs=[IO(idx=ID3)])
INFO	ordeq.runner	Running node Node(name=deterministic_graph:f2, outputs=[IO(idx=ID2)])
INFO	ordeq.runner	Running node Node(name=deterministic_graph:f1, outputs=[IO(idx=ID1)])
INFO	ordeq.runner	Running node View(name=deterministic_graph:z, inputs=[IO(idx=ID1), IO(idx=ID2), IO(idx=ID3), IO(idx=ID4)])
INFO	ordeq.runner	Running node View(name=deterministic_graph:a, inputs=[IO(idx=ID1), IO(idx=ID2), IO(idx=ID3), IO(idx=ID4)])

Typing:
packages/ordeq/tests/resources/runner/deterministic_graph.py:5: error: Need type annotation for "o1"  [var-annotated]
packages/ordeq/tests/resources/runner/deterministic_graph.py:6: error: Need type annotation for "o2"  [var-annotated]
packages/ordeq/tests/resources/runner/deterministic_graph.py:7: error: Need type annotation for "o3"  [var-annotated]
packages/ordeq/tests/resources/runner/deterministic_graph.py:8: error: Need type annotation for "o4"  [var-annotated]
packages/ordeq/tests/resources/runner/deterministic_graph.py:41: error: Argument 1 to "run" has incompatible type "*set[function]"; expected Module | Callable[..., Any] | str  [arg-type]
Found 5 errors in 1 file (checked 1 source file)